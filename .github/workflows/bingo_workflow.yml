name: Bingo workflow

on:
  push:
    branches:
      - githubActions_improvement

jobs:
  syntax_check_job:
    runs-on: ubuntu-latest
    name: Syntax check 
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Linter execution run
        uses: github/super-linter@v3
        env:
          DEFAULT_BRANCH: githubActions_improvement
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          LINTER_RULES_PATH: /
          JAVASCRIPT_ES_CONFIG_FILE: .eslintrc.js 
          VALIDATE_JAVASCRIPT_ES: true
    outputs:
      jobStatus: ${{ job.status }}

  test_execution_job:
    runs-on: ubuntu-latest
    name: Test execution job
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
      - name: Run Test Jest
        run: |
          npm install
          npm install jest
          npm test
    outputs:
      jobStatus: ${{ job.status }}

  build_statics_job:
    runs-on: ubuntu-latest
    name: Build Statics
    needs: [syntax_check_job, test_execution_job]
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
      - name: build
        run: |
          npm install
          npm run buildDev
      - name: artifact
        uses: actions/upload-artifact@v2
        with:
          name: artifact
          path: ./dist
    outputs:
      jobStatus: ${{ job.status }}
  
  deploy_job:
    runs-on: ubuntu-latest
    name: Deploy statics
    needs: build_statics_job
    steps:
      - name: Download artifacts
        uses: actions/download-artifact@v2
        with: 
          name: artifact
      - name: Surge Deploy
        uses: dswistowski/surge-sh-action@v1
        with:
          domain: rmenendez_bingo.surge.sh
          project: .
          login: ${{ secrets.SURGE_EMAIL }}
          token: ${{ secrets.SURGE_TOKEN }}
    outputs:
      jobStatus: ${{ job.status }}
  notification_job:
    name: notification_job
    runs-on: ubuntu-latest
    if: ${{ always() }}
    needs: deploy_job
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
      - name: Send Email
        uses: ./.github/actions/nodemail
        with:
          user_email: ${{ secrets.USER_EMAIL }}
          email: ${{ secrets.EMAIL }}
          pass: ${{ secrets.PASS }}
          syntax_check_job: ${{needs.syntax_check_job.outputs.jobStatus}}
          test_execution_job: ${{needs.test_execution_job.outputs.jobStatus}}
          build_statics_job: ${{needs.build_statics_job.outputs.jobStatus}}
          deploy_job: ${{needs.deploy_job.outputs.jobStatus}}
  
  update_readme_job:
    name: update_readme_job
    runs-on: ubuntu-latest
    needs: deploy_job
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
      - name: Create log
        run: |
          sed -i '$d' README.md
          echo "Ultima versiÃ³n desplegada el dia: `date` " >> README.md
      - name: Doing push
        run: |
        git config user.name rmenendezdaw
        git config user.email rmenendeziestacio@gmail.com
        git add .
        git commit -m "AutoCommit para el seguimiento del despliegue"
        git push origin githubActions_improvement